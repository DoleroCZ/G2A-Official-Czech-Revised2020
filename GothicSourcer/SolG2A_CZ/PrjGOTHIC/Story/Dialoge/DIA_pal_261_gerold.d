
instance DIA_GEROLD_EXIT(C_INFO)
{
	npc = pal_261_gerold;
	nr = 999;
	condition = dia_gerold_exit_condition;
	information = dia_gerold_exit_info;
	permanent = TRUE;
	description = DIALOG_ENDE;
};


func int dia_gerold_exit_condition()
{
	if(KAPITEL < 4)
	{
		return TRUE;
	};
};

func void dia_gerold_exit_info()
{
	AI_StopProcessInfos(self);
};


instance DIA_GEROLD_HALLO(C_INFO)
{
	npc = pal_261_gerold;
	nr = 2;
	condition = dia_gerold_hallo_condition;
	information = dia_gerold_hallo_info;
	permanent = FALSE;
	description = "Co to hlÌd·ö?";
};


func int dia_gerold_hallo_condition()
{
	if(KAPITEL == 2)
	{
		return TRUE;
	};
};

func void dia_gerold_hallo_info()
{
	AI_Output(other,self,"DIA_Gerold_Hallo_15_00");	//Co to hlÌd·ö?
	AI_Output(self,other,"DIA_Gerold_Hallo_12_01");	//VÏznÏ.
	AI_Output(other,self,"DIA_Gerold_Hallo_15_02");	//A kdo to je?
	AI_Output(self,other,"DIA_Gerold_Hallo_12_03");	//P·r trestanc˘ a ûoldnÈ¯ jmÈnem Gorn. Tuh˝ chlapÌk - je siln˝ jako b˝k.
	AI_Output(self,other,"DIA_Gerold_Hallo_12_04");	//Pot¯ebovali jsme Ëty¯i chlapy, abychom ho mohli d·t pod z·mek.
};


instance DIA_GEROLD_JAIL(C_INFO)
{
	npc = pal_261_gerold;
	nr = 2;
	condition = dia_gerold_jail_condition;
	information = dia_gerold_jail_info;
	permanent = FALSE;
	description = "PustÌö mÏ do vÏzenÌ?";
};


func int dia_gerold_jail_condition()
{
	if((KAPITEL == 2) && Npc_KnowsInfo(other,dia_gerold_hallo) && (GAROND_KERKERAUF == FALSE))
	{
		return TRUE;
	};
};

func void dia_gerold_jail_info()
{
	AI_Output(other,self,"DIA_Gerold_Jail_15_00");	//PustÌö mÏ do vÏzenÌ?
	AI_Output(self,other,"DIA_Gerold_Jail_12_01");	//Ne. NIKDO do vÏzenÌ nesmÌ. To platÌ pro KAéD…HO. Pro tebe, pro Miltena a pro vöechny ostatnÌ.
	AI_Output(self,other,"DIA_Gerold_Jail_12_02");	//Tohle nenÌ û·dn· hospoda, kam bys mohl vch·zet a vych·zet podle libosti. Pamatuj si to.
	KNOWSABOUTGORN = TRUE;
};


instance DIA_GEROLD_AUSNAHME(C_INFO)
{
	npc = pal_261_gerold;
	nr = 2;
	condition = dia_gerold_ausnahme_condition;
	information = dia_gerold_ausnahme_info;
	permanent = FALSE;
	description = "Nem˘ûeö pro mÏ udÏlat v˝jimku?";
};


func int dia_gerold_ausnahme_condition()
{
	if(Npc_KnowsInfo(other,dia_gerold_jail) && (KAPITEL == 2) && (GAROND_KERKERAUF == FALSE))
	{
		return TRUE;
	};
};

func void dia_gerold_ausnahme_info()
{
	AI_Output(other,self,"DIA_Gerold_Ausnahme_15_00");	//Nem˘ûeö pro mÏ udÏlat v˝jimku?
	AI_Output(self,other,"DIA_Gerold_Ausnahme_12_01");	//Ne.
};


instance DIA_GEROLD_GOLD(C_INFO)
{
	npc = pal_261_gerold;
	nr = 2;
	condition = dia_gerold_gold_condition;
	information = dia_gerold_gold_info;
	permanent = FALSE;
	description = "A co kdyû ti dob¯e zaplatÌm?";
};


func int dia_gerold_gold_condition()
{
	if(Npc_KnowsInfo(other,dia_gerold_ausnahme) && (KAPITEL == 2) && (GAROND_KERKERAUF == FALSE))
	{
		return TRUE;
	};
};

func void dia_gerold_gold_info()
{
	AI_Output(other,self,"DIA_Gerold_Gold_15_00");	//A co kdyû ti dob¯e zaplatÌm?
	AI_Output(self,other,"DIA_Gerold_Gold_12_01");	//... hm...
	AI_Output(self,other,"DIA_Gerold_Gold_12_02");	//Ne.
};


instance DIA_GEROLD_DEAL(C_INFO)
{
	npc = pal_261_gerold;
	nr = 2;
	condition = dia_gerold_deal_condition;
	information = dia_gerold_deal_info;
	permanent = FALSE;
	description = "M·m tady vzkaz pro jednoho z vÏzÚ˘. M˘ûeö mu ho p¯edat?";
};


func int dia_gerold_deal_condition()
{
	if((MIS_RESCUEGORN == LOG_RUNNING) && (Npc_HasItems(other,itwr_letterforgorn_mis) >= 1) && (KAPITEL == 2) && (GAROND_KERKERAUF == FALSE))
	{
		return TRUE;
	};
};

func void dia_gerold_deal_info()
{
	AI_Output(other,self,"DIA_Gerold_Deal_15_00");	//M·m tady vzkaz pro jednoho z vÏzÚ˘. M˘ûeö mu ho p¯edat?
	AI_Output(self,other,"DIA_Gerold_Deal_12_01");	//Hm... v z·sadÏ nevidÌm jedin˝ d˘vod, proË ne. Pro koho je ten vzkaz?
	AI_Output(other,self,"DIA_Gerold_Deal_15_02");	//Pro Gorna.
	AI_Output(self,other,"DIA_Gerold_Deal_12_03");	//Velice d˘leûit˝ vÏzeÚ. NemyslÌm, ûe by s tÌm Garond souhlasil. Ale pokud to je pro tebe tak podstatnÈ, jsem si jist, ûe se nÏjak dohodneme.
	AI_Output(other,self,"DIA_Gerold_Deal_15_04");	//Co chceö?
	AI_Output(self,other,"DIA_Gerold_Deal_12_05");	//Naöe p¯ÌdÏly jÌdla se v˝raznÏ snÌûily. R·d bych se pro zmÏnu jednou po¯·dnÏ najedl.
	AI_Output(self,other,"DIA_Gerold_Deal_12_06");	//P¯ines mi nÏjakou sluönou klob·sku a Ëerstv˝ krajÌc chleba - a trochu sladkÈho medu.
	AI_Output(self,other,"DIA_Gerold_Deal_12_07");	//A k tomu jeötÏ l·hev vÌna... Jo, to by mÏlo staËit. UrËitÏ se ti to poda¯Ì. Vraù se, aû to budeö mÌt.
	b_logentry(TOPIC_RESCUEGORN,"Pokud Geroldovi p¯inesu klob·su, chlÈb, vÌno a med, p¯ed· Gornovi zpr·vu.");
};


instance DIA_GEROLD_STUFF(C_INFO)
{
	npc = pal_261_gerold;
	nr = 2;
	condition = dia_gerold_stuff_condition;
	information = dia_gerold_stuff_info;
	permanent = TRUE;
	description = "NÏco pro tebe m·m...";
};


var int dia_gerold_stuff_permanent;

func int dia_gerold_stuff_condition()
{
	if((Npc_HasItems(other,itwr_letterforgorn_mis) >= 1) && Npc_KnowsInfo(other,dia_gerold_deal) && (KAPITEL == 2) && (DIA_GEROLD_STUFF_PERMANENT == FALSE))
	{
		return TRUE;
	};
};

func void dia_gerold_stuff_info()
{
	AI_Output(other,self,"DIA_Gerold_Stuff_15_00");	//NÏco pro tebe m·m. JÌdlo, kterÈ jsi chtÏl.
	if((Npc_HasItems(other,itfo_honey) >= 1) && (Npc_HasItems(other,itfo_bread) >= 1) && (Npc_HasItems(other,itfo_wine) >= 1) && (Npc_HasItems(other,itfo_sausage) >= 1))
	{
		AI_PrintScreen("Honig gegeben",-1,34,FONT_SCREENSMALL,2);
		AI_PrintScreen("Brot gegeben",-1,37,FONT_SCREENSMALL,2);
		AI_PrintScreen("Wein gegeben",-1,40,FONT_SCREENSMALL,2);
		AI_PrintScreen("Wurst gegeben",-1,43,FONT_SCREENSMALL,2);
		Npc_RemoveInvItems(other,itfo_honey,1);
		Npc_RemoveInvItems(other,itfo_bread,1);
		Npc_RemoveInvItems(other,itfo_wine,1);
		Npc_RemoveInvItems(other,itfo_sausage,1);
		AI_Output(self,other,"DIA_Gerold_Stuff_12_01");	//Dobr·, dej mi ten dlabanec. M·ö ten vzkaz?
		AI_Output(other,self,"DIA_Gerold_Stuff_15_02");	//Ano, tady. NezapomeÚ, je to pro Gorna.
		AI_Output(self,other,"DIA_Gerold_Stuff_12_03");	//Vraù se zÌtra, tou dobou uû bude ten vzkaz mÌt.
		b_giveinvitems(other,self,itwr_letterforgorn_mis,1);
		DAYCONTACTGORN = Wld_GetDay();
		DIA_GEROLD_STUFF_PERMANENT = TRUE;
		b_logentry(TOPIC_RESCUEGORN,"Gerold dostal, co chtÏl, a teÔ p¯ed· zpr·vu p¯ÌsluönÈmu adres·tovi.");
	}
	else
	{
		AI_Output(self,other,"DIA_Gerold_Stuff_12_04");	//Vraù se, aû budeö mÌt vÏci, kterÈ jsem chtÏl.
	};
};


instance DIA_GEROLD_ANTWORT(C_INFO)
{
	npc = pal_261_gerold;
	nr = 2;
	condition = dia_gerold_antwort_condition;
	information = dia_gerold_antwort_info;
	permanent = TRUE;
	description = "Dostal Gorn ten vzkaz?";
};


var int dia_gerold_antwort_permanent;

func int dia_gerold_antwort_condition()
{
	if((DIA_GEROLD_STUFF_PERMANENT == TRUE) && (KAPITEL == 2) && (DIA_GEROLD_ANTWORT_PERMANENT == FALSE))
	{
		return TRUE;
	};
};

func void dia_gerold_antwort_info()
{
	AI_Output(other,self,"DIA_Gerold_Antwort_15_00");	//Dostal Gorn ten vzkaz?
	if(DAYCONTACTGORN < Wld_GetDay())
	{
		AI_Output(self,other,"DIA_Gerold_Antwort_12_01");	//Ano, a m·m ti od nÏj vy¯Ìdit tohle:
		AI_Output(other,self,"DIA_Gerold_Antwort_15_02");	//A?
		AI_Output(self,other,"DIA_Gerold_Antwort_12_03");	//Je to u jiûnÌ br·ny.
		AI_Output(other,self,"DIA_Gerold_Antwort_15_04");	//ÿÌkal jeötÏ nÏco?
		AI_Output(self,other,"DIA_Gerold_Antwort_12_05");	//Ne. NetuöÌm, co to mÏlo znamenat. Ty to vÌö?
		AI_Output(other,self,"DIA_Gerold_Antwort_15_06");	//Moûn·. Ale radöi bys o tom nemÏl moc p¯em˝ölet.
		AI_Output(self,other,"DIA_Gerold_Antwort_12_07");	//Ano, to asi bude lepöÌ.
		GORNSTREASURE = TRUE;
		DIA_GEROLD_ANTWORT_PERMANENT = TRUE;
		b_logentry(TOPIC_RESCUEGORN,"Gorn tvrdÌ, ûe jeho zlato najdu u jiûnÌ br·ny.");
	}
	else
	{
		AI_Output(self,other,"DIA_Gerold_GornsAnswer_12_08");	//Ne, jeötÏ ne. Vraù se pozdÏji.
	};
	AI_StopProcessInfos(self);
};


instance DIA_GEROLD_SETGORNFREE(C_INFO)
{
	npc = pal_261_gerold;
	nr = 2;
	condition = dia_gerold_setgornfree_condition;
	information = dia_gerold_setgornfree_info;
	permanent = FALSE;
	description = "Propusù Gorna na svobodu. Je to rozkaz od velitele Garonda.";
};


func int dia_gerold_setgornfree_condition()
{
	if((GAROND_KERKERAUF == TRUE) && (KAPITEL == 2))
	{
		return TRUE;
	};
};

func void dia_gerold_setgornfree_info()
{
	AI_Output(other,self,"DIA_Gerold_SetGornFree_15_00");	//Propusù Gorna na svobodu. Je to rozkaz od velitele Garonda.
	AI_Output(self,other,"DIA_Gerold_SetGornFree_12_01");	//Uû o tom vÌm. Tady m·ö klÌË, m˘ûeö dovnit¯.
	CreateInvItems(self,itke_prisonkey_mis,1);
	b_giveinvitems(self,other,itke_prisonkey_mis,1);
	b_logentry(TOPIC_RESCUEGORN,"Gerold mi svÏ¯il klÌË od vÏznice.");
};


instance DIA_GEROLD_PERM(C_INFO)
{
	npc = pal_261_gerold;
	nr = 900;
	condition = dia_gerold_perm_condition;
	information = dia_gerold_perm_info;
	permanent = TRUE;
	description = "To nikdy nespÌö?";
};


func int dia_gerold_perm_condition()
{
	if((KAPITEL < 4) && Npc_KnowsInfo(other,dia_gerold_gold))
	{
		return TRUE;
	};
};

func void dia_gerold_perm_info()
{
	AI_Output(other,self,"DIA_Gerold_Perm_15_00");	//To nikdy nespÌö?
	AI_Output(self,other,"DIA_Gerold_Perm_12_01");	//Ne. Innos s·m mi dal sÌlu, abych nikdy nepot¯eboval odpoËinek.
};


instance DIA_GEROLD_KAP4_EXIT(C_INFO)
{
	npc = pal_261_gerold;
	nr = 999;
	condition = dia_gerold_kap4_exit_condition;
	information = dia_gerold_kap4_exit_info;
	permanent = TRUE;
	description = DIALOG_ENDE;
};


func int dia_gerold_kap4_exit_condition()
{
	if(KAPITEL == 4)
	{
		return TRUE;
	};
};

func void dia_gerold_kap4_exit_info()
{
	AI_StopProcessInfos(self);
};


instance DIA_GEROLD_KAP4_ALLESRUHIG(C_INFO)
{
	npc = pal_261_gerold;
	nr = 30;
	condition = dia_gerold_kap4_allesruhig_condition;
	information = dia_gerold_kap4_allesruhig_info;
	description = "Vöechno v po¯·dku?";
};


func int dia_gerold_kap4_allesruhig_condition()
{
	if(KAPITEL >= 4)
	{
		return TRUE;
	};
};

func void dia_gerold_kap4_allesruhig_info()
{
	AI_Output(other,self,"DIA_Gerold_KAP4_ALLESRUHIG_15_00");	//Vöechno v po¯·dku?
	AI_Output(self,other,"DIA_Gerold_KAP4_ALLESRUHIG_12_01");	//V po¯·dku, ano.
	AI_Output(other,self,"DIA_Gerold_KAP4_ALLESRUHIG_15_02");	//Ale?
	AI_Output(self,other,"DIA_Gerold_KAP4_ALLESRUHIG_12_03");	//Pupek mi drhne o p·te¯, chlape. Garond zase zmenöil p¯ÌdÏly jÌdla.
	AI_Output(self,other,"DIA_Gerold_KAP4_ALLESRUHIG_12_04");	//Jestli nedostanu do ch¯t·nu nÏjak˝ sluön˝ dlabanec, zahryznu se do tÈ Garondovy tlustÈ... zadku.
	Info_ClearChoices(dia_gerold_kap4_allesruhig);
	Info_AddChoice(dia_gerold_kap4_allesruhig,"To nenÌ m˘j problÈm.",dia_gerold_kap4_allesruhig_nein);
	Info_AddChoice(dia_gerold_kap4_allesruhig,"Moûn· bych ti mohl nÏco d·t.",dia_gerold_kap4_allesruhig_geben);
};

func void dia_gerold_kap4_allesruhig_geben()
{
	AI_Output(other,self,"DIA_Gerold_KAP4_ALLESRUHIG_geben_15_00");	//Moûn· bych ti mohl nÏco d·t.
	AI_Output(self,other,"DIA_Gerold_KAP4_ALLESRUHIG_geben_12_01");	//Zbl·znil ses? Tady v û·dnÈm p¯ÌpadÏ. Kdyby to vidÏli ostatnÌ, budu mÌt hned tunu nov˝ch p¯·tel, jestli ch·peö, co tÌm chci ¯Ìct.
	if(Wld_IsTime(23,10,8,0) == FALSE)
	{
		AI_Output(self,other,"DIA_Gerold_KAP4_ALLESRUHIG_geben_12_02");	//Aû p˘jdou vöichni sp·t, najdeö mÏ v m·govÏ svatyni.
	}
	else
	{
		AI_Output(self,other,"DIA_Gerold_KAP4_ALLESRUHIG_geben_12_03");	//Rychle, pojÔ za mnou do m·govy svatynÏ, neû se ostatnÌ vyhrabou. Nechce se mi Ëekat do zÌt¯ka.
	};
	AI_Output(self,other,"DIA_Gerold_KAP4_ALLESRUHIG_geben_12_04");	//V tuhle dobu tam stejnÏ nikdo neb˝v·. PoËk·m tam na tebe.
	AI_Output(self,other,"DIA_Gerold_KAP4_ALLESRUHIG_geben_12_05");	//Ale neukazuj se tam se such˝m chlebem a syrovou flaksou masa, jasn˝?
	AI_StopProcessInfos(self);
	Npc_ExchangeRoutine(self,"Food");
	Log_CreateTopic(TOPIC_GEROLDGIVEFOOD,LOG_MISSION);
	Log_SetTopicStatus(TOPIC_GEROLDGIVEFOOD,LOG_RUNNING);
	b_logentry(TOPIC_GEROLDGIVEFOOD,"Garond opÏt omezil p¯ÌdÏly potravin. Radöi bych mÏl Geroldovi d·t nÏco k jÌdlu, nebo z hladu vyvede nÏjakou hroznou pitomost. ");
	MIS_GEROLDGIVEFOOD = LOG_RUNNING;
};

func void dia_gerold_kap4_allesruhig_nein()
{
	AI_Output(other,self,"DIA_Gerold_KAP4_ALLESRUHIG_Nein_15_00");	//To nenÌ m˘j problÈm.
	AI_Output(self,other,"DIA_Gerold_KAP4_ALLESRUHIG_Nein_12_01");	//M˘ûeö mluvit. TobÏ Garond urËitÏ p¯ÌdÏl nesnÌûÌ.
	AI_Output(self,other,"DIA_Gerold_KAP4_ALLESRUHIG_Nein_12_02");	//I kdyû by to neuznal, m· strachy staûen˝ zadek a v tobÏ vidÌ jedinou sp·su.
	AI_StopProcessInfos(self);
};


var int gerold_foodcounter;

instance DIA_GEROLD_FOOD(C_INFO)
{
	npc = pal_261_gerold;
	nr = 31;
	condition = dia_gerold_food_condition;
	information = dia_gerold_food_info;
	important = TRUE;
};


func int dia_gerold_food_condition()
{
	if((Npc_GetDistToWP(self,"OC_MAGE_IN") < 500) && (KAPITEL >= 4))
	{
		return TRUE;
	};
};

func void dia_gerold_morefood()
{
	Info_ClearChoices(dia_gerold_food);
	if(GEROLD_FOODCOUNTER > 8)
	{
		AI_Output(self,other,"DIA_Gerold_MoreFood_12_00");	//To staËÌ. To staËÌ. S tÌm na chvÌli vystaËÌm.
		AI_Output(self,other,"DIA_Gerold_MoreFood_12_01");	//Tady m·ö penÌze. Tady si za nÏ stejnÏ nic nekoupÌm, takûe si je klidnÏ vezmi.
		AI_Output(self,other,"DIA_Gerold_MoreFood_12_02");	//Uû bych asi mÏl jÌt, neû si n·s nÏkdo vöimne.
		AI_StopProcessInfos(self);
		Npc_ExchangeRoutine(self,"Start");
		MIS_GEROLDGIVEFOOD = LOG_SUCCESS;
		b_giveplayerxp(XP_GEROLDGIVEFOOD);
		CreateInvItems(self,itmi_gold,450);
		b_giveinvitems(self,other,itmi_gold,450);
	}
	else
	{
		if(GEROLD_FOODCOUNTER == 0)
		{
			Info_AddChoice(dia_gerold_food,"TeÔ moment·lnÏ nic nem·m.",dia_gerold_food_nichts);
		}
		else
		{
			Info_AddChoice(dia_gerold_food,"To je vöechno, co m·m.",dia_gerold_food_kaese_nichtmehr);
			if(GEROLD_FOODCOUNTER < 5)
			{
				AI_Output(self,other,"DIA_Gerold_MoreFood_12_03");	//Jasan. Dej to sem. M·ö jeötÏ dalöÌ?
			}
			else
			{
				AI_Output(self,other,"DIA_Gerold_MoreFood_12_04");	//Jo. VÌc, vÌc!
			};
		};
		if(Npc_HasItems(other,itfo_fishsoup) || Npc_HasItems(other,itfo_stew))
		{
			Info_AddChoice(dia_gerold_food,"(D·t mu polÈvku.)",dia_gerold_food_suppe);
		};
		if(Npc_HasItems(other,itfomutton))
		{
			Info_AddChoice(dia_gerold_food,"(D·t mu maso.)",dia_gerold_food_fleisch);
		};
		if(Npc_HasItems(other,itfo_bacon))
		{
			Info_AddChoice(dia_gerold_food,"(D·t mu öunku.)",dia_gerold_food_schinken);
		};
		if(Npc_HasItems(other,itfo_cheese))
		{
			Info_AddChoice(dia_gerold_food,"(D·t mu s˝r.)",dia_gerold_food_kaese);
		};
		if(Npc_HasItems(other,itfo_sausage))
		{
			Info_AddChoice(dia_gerold_food,"(D·t mu klob·su.)",dia_gerold_food_wurst);
		};
		GEROLD_FOODCOUNTER = GEROLD_FOODCOUNTER + 1;
	};
};

func void dia_gerold_food_info()
{
	AI_Output(self,other,"DIA_Gerold_FOOD_12_00");	//Tady m·ö. Takûe co? M·ö pro mÏ nÏco k jÌdlu?
	dia_gerold_morefood();
};

func void dia_gerold_food_nichts()
{
	AI_Output(other,self,"DIA_Gerold_FOOD_nichts_15_00");	//TeÔ moment·lnÏ nic nem·m.
	AI_Output(self,other,"DIA_Gerold_FOOD_nichts_12_01");	//Nejd¯Ìv kolem toho dÏl·ö takov˝ humbuk a nakonec mÏ chceö podvÈst?
	AI_StopProcessInfos(self);
	b_attack(self,other,AR_NONE,1);
	Npc_ExchangeRoutine(self,"Start");
	MIS_GEROLDGIVEFOOD = LOG_FAILED;
	b_giveplayerxp(XP_AMBIENT);
};

func void dia_gerold_food_kaese_nichtmehr()
{
	var int xp_geroldgivefoodlow;
	var int teiler;
	AI_Output(other,self,"DIA_Gerold_FOOD_kaese_nichtmehr_15_00");	//To je vöechno, co m·m.
	AI_Output(self,other,"DIA_Gerold_FOOD_kaese_nichtmehr_12_01");	//A tomu m·m vÏ¯it? No dobr·, lepöÌ nÏco neû nic. Tady m·ö p·r zlaù·k˘.
	CreateInvItems(self,itmi_gold,50);
	b_giveinvitems(self,other,itmi_gold,50);
	AI_Output(self,other,"DIA_Gerold_FOOD_kaese_nichtmehr_12_02");	//No. MÏl bych se vr·tit na svoje mÌsto.
	AI_StopProcessInfos(self);
	if(GEROLD_FOODCOUNTER < 4)
	{
		teiler = 3;
	}
	else
	{
		teiler = 2;
	};
	xp_geroldgivefoodlow = XP_GEROLDGIVEFOOD / teiler;
	Npc_ExchangeRoutine(self,"Start");
	MIS_GEROLDGIVEFOOD = LOG_OBSOLETE;
	b_giveplayerxp(xp_geroldgivefoodlow);
};

func void dia_gerold_food_kaese()
{
	AI_Output(other,self,"DIA_Gerold_FOOD_kaese_15_00");	//Co takhle pÏkn˝ öpalÌk s˝ra?
	b_giveinvitems(other,self,itfo_cheese,1);
	dia_gerold_morefood();
};

func void dia_gerold_food_wurst()
{
	AI_Output(other,self,"DIA_Gerold_FOOD_Wurst_15_00");	//Kus klob·sy?
	b_giveinvitems(other,self,itfo_sausage,1);
	dia_gerold_morefood();
};

func void dia_gerold_food_schinken()
{
	AI_Output(other,self,"DIA_Gerold_FOOD_schinken_15_00");	//M˘ûu ti d·t tuhle öunku.
	b_giveinvitems(other,self,itfo_bacon,1);
	dia_gerold_morefood();
};

func void dia_gerold_food_fleisch()
{
	AI_Output(other,self,"DIA_Gerold_FOOD_fleisch_15_00");	//Fl·k masa?
	b_giveinvitems(other,self,itfomutton,1);
	dia_gerold_morefood();
};

func void dia_gerold_food_suppe()
{
	AI_Output(other,self,"DIA_Gerold_FOOD_Suppe_15_00");	//Dobr· polÈvka by se öikla, ne?
	if(b_giveinvitems(other,self,itfo_fishsoup,1))
	{
	}
	else
	{
		b_giveinvitems(other,self,itfo_stew,1);
	};
	dia_gerold_morefood();
};


instance DIA_GEROLD_PERM4(C_INFO)
{
	npc = pal_261_gerold;
	nr = 41;
	condition = dia_gerold_perm4_condition;
	information = dia_gerold_perm4_info;
	permanent = TRUE;
	description = "JeötÏ m·ö hlad?";
};


func int dia_gerold_perm4_condition()
{
	if(Npc_KnowsInfo(other,dia_gerold_kap4_allesruhig))
	{
		return TRUE;
	};
};

func void dia_gerold_perm4_info()
{
	AI_Output(other,self,"DIA_Gerold_PERM4_15_00");	//JeötÏ m·ö hlad?
	if(MIS_OCGATEOPEN == TRUE)
	{
		AI_Output(self,other,"DIA_Gerold_PERM4_12_01");	//Pokud sk¯eti znovu za˙toËÌ, nepom˘ûe mi ani plnÈ b¯icho.
	}
	else if(MIS_GEROLDGIVEFOOD == LOG_SUCCESS)
	{
		AI_Output(self,other,"DIA_Gerold_PERM4_12_02");	//To si dÏl·ö srandu. Uû jsem pln˝. JeötÏ jednou dÏkuju.
	}
	else if(MIS_GEROLDGIVEFOOD == LOG_OBSOLETE)
	{
		AI_Output(self,other,"DIA_Gerold_PERM4_12_03");	//Hm. Ale i tak ti dÏkuju.
	}
	else if(hero.guild == GIL_KDF)
	{
		AI_Output(self,other,"DIA_Gerold_PERM4_12_04");	//Je to v po¯·dku, mist¯e.
	}
	else
	{
		AI_Output(self,other,"DIA_Gerold_PERM4_12_05");	//Zmiz!
	};
	AI_StopProcessInfos(self);
};


instance DIA_GEROLD_KAP5_EXIT(C_INFO)
{
	npc = pal_261_gerold;
	nr = 999;
	condition = dia_gerold_kap5_exit_condition;
	information = dia_gerold_kap5_exit_info;
	permanent = TRUE;
	description = DIALOG_ENDE;
};


func int dia_gerold_kap5_exit_condition()
{
	if(KAPITEL == 5)
	{
		return TRUE;
	};
};

func void dia_gerold_kap5_exit_info()
{
	AI_StopProcessInfos(self);
};


instance DIA_GEROLD_KAP6_EXIT(C_INFO)
{
	npc = pal_261_gerold;
	nr = 999;
	condition = dia_gerold_kap6_exit_condition;
	information = dia_gerold_kap6_exit_info;
	permanent = TRUE;
	description = DIALOG_ENDE;
};


func int dia_gerold_kap6_exit_condition()
{
	if(KAPITEL == 6)
	{
		return TRUE;
	};
};

func void dia_gerold_kap6_exit_info()
{
	AI_StopProcessInfos(self);
};


instance DIA_GEROLD_PICKPOCKET(C_INFO)
{
	npc = pal_261_gerold;
	nr = 900;
	condition = dia_gerold_pickpocket_condition;
	information = dia_gerold_pickpocket_info;
	permanent = TRUE;
	description = PICKPOCKET_80;
};


func int dia_gerold_pickpocket_condition()
{
	return c_beklauen(71,170);
};

func void dia_gerold_pickpocket_info()
{
	Info_ClearChoices(dia_gerold_pickpocket);
	Info_AddChoice(dia_gerold_pickpocket,DIALOG_BACK,dia_gerold_pickpocket_back);
	Info_AddChoice(dia_gerold_pickpocket,DIALOG_PICKPOCKET,dia_gerold_pickpocket_doit);
};

func void dia_gerold_pickpocket_doit()
{
	b_beklauen();
	Info_ClearChoices(dia_gerold_pickpocket);
};

func void dia_gerold_pickpocket_back()
{
	Info_ClearChoices(dia_gerold_pickpocket);
};

